* source LMG1210
*
*****************************************************************************
* (C) Copyright 2019 Texas Instruments Incorporated. All rights reserved.                                            
*****************************************************************************
** This model is designed as an aid for customers of Texas Instruments.                                             
** TI and its licensors and suppliers make no warranties, either expressed                                           
** or implied, with respect to this model, including the warranties of                                                    
** merchantability or fitness for a particular purpose. The model is                                                      
** provided solely on an "as is" basis. The entire risk as to its quality                                                    
** and performance is with the customer.                                                                                         
*****************************************************************************
*
* Released by: WEBENCH Design Center, Texas Instruments Inc.
* Part: LMG1210
* Date: 3/8/2019
* Model Type: Transient 
* Simulator: PSPICE
* Simulator Version: 16.2
* EVM Order Number: 
* EVM Users Guide: 
* Datasheet: SNOSD12 –OCTOBER 2015 --REVISED JUNE 2016
* Model Version: Final 2.2
* Release to Web.
****************************************************************
* This model provides the following features
* PWM or independent mode, dead time programming. LDO,  
* propogation delay time, UVLO,




************
*$
.SUBCKT LMG1210 HB HO PWM_LI HS_0 HS_1 HS_2 HS_3 HS_DAP LS_DAP VIN LO DHL DLH  VCC VSS_0 VSS_1 EN_HI NC_0 NC_1 NC_2 BST
RNC0 NC_0 0 1MEG
RNC1 NC_1 0 1MEG
RNC2 NC_2 0 1MEG
RHSDAP  HS_DAP 0 1MEG
RLSDAP  LS_DAP 0 1MEG
Rhs0 HS_0 HS 1m
Rhs1 HS_1 HS 1m
Rhs2 HS_2 HS 1m
Rhs3 HS_3 HS 1m
Rvss1 VSS_1 VSS 1m
Rvss0 VSS_0 VSS 1m

V_LMG1210_PWM_V10         LMG1210_PWM_N16771098 0 300m
X_LMG1210_PWM_U8         DLH LMG1210_PWM_N16764262 LMG1210_PWM_N16771098
+  LMG1210_PWM_N16778522 COMPHYS2_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=0.5 T=10
V_LMG1210_PWM_V6         LMG1210_PWM_N16764262 0 4.5
R_LMG1210_PWM_R9         LMG1210_PWM_N16774119 LMG1210_PWM_N16783816  1 TC=0,0 
C_LMG1210_PWM_C9         0 LMG1210_PWM_N16774119  1n  
E_LMG1210_PWM_ABM3         LMG1210_PWM_N16775153 0 VALUE { ( V(EN_HI)  
+ *V(LMG1210_PWM_N16766360) ) / 1   }
X_LMG1210_PWM_U6         EN_HI LMG1210_PWM_N16774119 LMG1210_PWM_SELECT_HI_LO
+  LMG1210_N16721992 2TO1MUX PARAMS:  VTHRESH=0.5
X_LMG1210_PWM_U7         PWM_LI LMG1210_PWM_N16775155 LMG1210_PWM_SELECT_HI_LO
+  LMG1210_N16761314 2TO1MUX PARAMS:  VTHRESH=0.5
E_LMG1210_PWM_ABM2         LMG1210_PWM_N16783816 0 VALUE { ( V(EN_HI)  
+ *V(LMG1210_PWM_N16722442) ) / 1   }
X_LMG1210_PWM_DT_S1    LMG1210_PWM_DT_CLKZ 0 LMG1210_PWM_DT_DVDD
+  LMG1210_PWM_DT_N16758862 DT_Block_LMG1210_PWM_DT_S1 
E_LMG1210_PWM_DT_E2         LMG1210_PWM_N16766360 0 LMG1210_PWM_DT_N16755450 0
+  5
X_LMG1210_PWM_DT_U8         DLH LMG1210_PWM_DT_N16758862
+  LMG1210_PWM_DT_N16755332 COMP_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=0.5
R_LMG1210_PWM_DT_R3         DLH LMG1210_PWM_DT_DVDD  25k TC=0,0 
X_LMG1210_PWM_DT_U29         LMG1210_PWM_DT_N16754872 LMG1210_PWM_DT_N16754844
+  INV_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=500E-3
E_LMG1210_PWM_DT_E1         LMG1210_PWM_N16722442 0 LMG1210_PWM_DT_N16755440 0
+  5
I_LMG1210_PWM_DT_I1         LMG1210_PWM_DT_N16758862 0 DC {Idt}  
X_LMG1210_PWM_DT_U30         LMG1210_PWM_DT_N16754844 LMG1210_PWM_DT_N16754912
+  INV_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=500E-3
X_LMG1210_PWM_DT_S4    LMG1210_PWM_DT_CLKZ 0 LMG1210_PWM_DT_N16755188
+  LMG1210_PWM_DT_N16755282 DT_Block_LMG1210_PWM_DT_S4 
V_LMG1210_PWM_DT_V5         LMG1210_PWM_DT_DVDD 0 1.8
X_LMG1210_PWM_DT_U31         LMG1210_PWM_DT_N16754912 PWM_LI
+  LMG1210_PWM_DT_N16755440 AND2_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=500E-3
X_LMG1210_PWM_DT_U32         LMG1210_PWM_DT_N16755188 LMG1210_PWM_DT_N16755160
+  INV_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=500E-3
X_LMG1210_PWM_DT_S3    PWM_LI 0 LMG1210_PWM_DT_DVDD LMG1210_PWM_DT_N16769401
+  DT_Block_LMG1210_PWM_DT_S3 
R_LMG1210_PWM_DT_R5         DHL LMG1210_PWM_DT_DVDD  25k TC=0,0 
X_LMG1210_PWM_DT_U33         LMG1210_PWM_DT_N16755160 LMG1210_PWM_DT_N16755228
+  INV_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=500E-3
C_LMG1210_PWM_DT_C3         LMG1210_PWM_DT_N16758862 LMG1210_PWM_DT_DVDD  100f
+  IC=0 
X_LMG1210_PWM_DT_U34         LMG1210_PWM_DT_N16755228 LMG1210_PWM_DT_CLKZ
+  LMG1210_PWM_DT_N16755450 AND2_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=500E-3
C_LMG1210_PWM_DT_C4         LMG1210_PWM_DT_N16769401 LMG1210_PWM_DT_DVDD  100f
+  IC=0 
X_LMG1210_PWM_DT_U28         PWM_LI LMG1210_PWM_DT_CLKZ INV_BASIC_GEN PARAMS:
+  VDD=1 VSS=0 VTHRESH=500E-3
X_LMG1210_PWM_DT_U9         DHL LMG1210_PWM_DT_N16769401
+  LMG1210_PWM_DT_N16755282 COMP_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=0.5
I_LMG1210_PWM_DT_I2         LMG1210_PWM_DT_N16769401 0 DC {Idt}  
X_LMG1210_PWM_DT_S2    PWM_LI 0 LMG1210_PWM_DT_N16754872
+  LMG1210_PWM_DT_N16755332 DT_Block_LMG1210_PWM_DT_S2 
E_LMG1210_PWM_ABM1         LMG1210_PWM_N16782654 0 VALUE { {IF
+  (V(LMG1210_PWM_N16778522) >800m, 1, 0)}    }
R_LMG1210_PWM_R8         LMG1210_PWM_N16775155 LMG1210_PWM_N16775153  1 TC=0,0 
C_LMG1210_PWM_C8         0 LMG1210_PWM_N16775155  1n  
C_LMG1210_PWM_C7         0 LMG1210_PWM_SELECT_HI_LO  1n  
R_LMG1210_PWM_R7         LMG1210_PWM_SELECT_HI_LO LMG1210_PWM_N16782654  1
+  TC=0,0 
R_LMG1210_R23         HS_0 LMG1210_N16721723  1m TC=0,0 
X_LMG1210_S4    LMG1210_LO_BST 0 LMG1210_VDD_VLDO BST LMG1210_LMG1210_S4 
R_LMG1210_R18         LMG1210_VSS LMG1210_N16719683  10k TC=0,0 
R_LMG1210_R24         VSS_1 LMG1210_VSS  1m TC=0,0 
R_LMG1210_R31         BST LMG1210_VDD_VLDO  1k TC=0,0 
X_LMG1210_U_LDO         VIN VIN LMG1210_VDD_VLDO LMG1210_VSS LMG1210_N16719683
+  LDO_Generic
R_LMG1210_R25         VSS_0 LMG1210_VSS  1m TC=0,0 
R_LMG1210_R22         HS_1 LMG1210_N16721723  1m TC=0,0 
R_LMG1210_R19         VCC LMG1210_VDD_VLDO  1 TC=0,0 
R_LMG1210_R17         LMG1210_N16719683 LMG1210_VDD_VLDO  40k TC=0,0 
X_LMG1210_CORE_U8         LMG1210_CORE_LO_ON LMG1210_CORE_N16622998
+  falling_delay PARAMS:  DELAY=1n VDD=1 VSS=0 VTHRESH=0.5
X_LMG1210_CORE_U11         LMG1210_CORE_N16645608 LMG1210_CORE_N16645614
+  BUFFER_PS PARAMS: VHI=1 VLO=0 VTHRESH=500E-3 TPLH={Thplh} TPHL={Thphl} TR=1E-9
+  TF=1E-9
R_LMG1210_CORE_R1         LMG1210_VSS LMG1210_N16761314  200k  
V_LMG1210_CORE_V10         LMG1210_CORE_N16633124 0 0.2
C_LMG1210_CORE_C4         LMG1210_CORE_N16622670 LMG1210_CORE_N16622702  5p  
E_LMG1210_CORE_E3         LO LMG1210_CORE_N16622960 VALUE {
+  IF(V(LMG1210_CORE_N16622998, 0) > 0.5, -5, 5) }
C_LMG1210_CORE_C2         LMG1210_CORE_N16622258 LMG1210_CORE_N16622224  5p  
X_LMG1210_CORE_U3         LMG1210_CORE_N16621650 LMG1210_CORE_N16621524
+  LMG1210_CORE_UVLOLOW AND2_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=.5
E_LMG1210_CORE_E9         LMG1210_LO_BST LMG1210_VSS LMG1210_CORE_N16704239
+  LMG1210_VSS 5
C_LMG1210_CORE_C5         LMG1210_CORE_LOH LMG1210_CORE_N16622670  5p  
X_LMG1210_CORE_U9         LMG1210_CORE_N16628650 LMG1210_CORE_N16628590
+  LMG1210_CORE_N16628618 LMG1210_CORE_N16621542 COMPHYS_BASIC_GEN PARAMS: VDD=1
+  VSS=0 VTHRESH=0.5
R_LMG1210_CORE_R6         LMG1210_CORE_N16622258 LMG1210_N16721723  0.02  
X_LMG1210_CORE_U6         VCC LMG1210_CORE_N16623296 d_d1 PARAMS:
R_LMG1210_CORE_R8         VCC LMG1210_CORE_N16622702  0.02  
X_LMG1210_CORE_U4         LMG1210_CORE_N16621966 LMG1210_CORE_UVLOHI
+  LMG1210_CORE_N16645608 AND2_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=.5
V_LMG1210_CORE_V5         LMG1210_CORE_N16628590 0 7.2
R_LMG1210_CORE_R3         LMG1210_CORE_N16623018 LMG1210_CORE_N16623024  50  
X_LMG1210_CORE_U5         LMG1210_N16721992 LMG1210_CORE_N16621878
+  LMG1210_CORE_N16621906 LMG1210_CORE_N16621646 COMPHYS_BASIC_GEN PARAMS: VDD=1
+  VSS=0 VTHRESH=0.5
X_LMG1210_CORE_S7    LMG1210_CORE_N16621542 LMG1210_VSS HB
+  LMG1210_CORE_N16623296 Core_Cell_LMG1210_CORE_S7 
E_LMG1210_CORE_E2         HO LMG1210_CORE_N16622210 VALUE {
+  IF(V(LMG1210_CORE_N16622408, 0) > 0.5, -5, 5) }
R_LMG1210_CORE_R11         LMG1210_CORE_HOH HO  1m  
R_LMG1210_CORE_R9         LMG1210_CORE_N16622960 LMG1210_CORE_N16622828  50  
E_LMG1210_CORE_E6         LMG1210_CORE_HI_ON LMG1210_VSS LMG1210_CORE_N16645614
+  LMG1210_VSS 1
V_LMG1210_CORE_V6         LMG1210_CORE_N16628618 0 0.2
E_LMG1210_CORE_E1         LMG1210_CORE_N16623018 LMG1210_CORE_HOH VALUE {
+  IF(V(LMG1210_CORE_HI_ON, 0) > 0.5, 5, -5) }
V_LMG1210_CORE_V3         LMG1210_CORE_N16621878 LMG1210_VSS 1.8
C_LMG1210_CORE_C6         HO LMG1210_CORE_N16622224  5p  
X_LMG1210_CORE_U13         LMG1210_CORE_N16631366 LMG1210_CORE_N16631286
+  LMG1210_CORE_N16631334 LMG1210_CORE_N16621966 COMPHYS_BASIC_GEN PARAMS: VDD=1
+  VSS=0 VTHRESH=0.5
C_LMG1210_CORE_C7         LMG1210_CORE_N16622840 LMG1210_CORE_N16622828  5p  
V_LMG1210_CORE_V4         LMG1210_CORE_N16621906 0 0.4
M_LMG1210_CORE_M1         LMG1210_CORE_N16623050 LMG1210_CORE_N16623024
+  LMG1210_CORE_HOH LMG1210_CORE_HOH NMOS01           
X_LMG1210_CORE_U12         LMG1210_CORE_UVLOLOW LMG1210_CORE_N16682205
+  BUFFER_PS PARAMS: VHI=1 VLO=0 VTHRESH=500E-3 TPLH={Tlplh} TPHL={Tlphl} TR=1E-9
+  TF=1E-9
V_LMG1210_CORE_V7         LMG1210_CORE_N16631286 0 3.55
X_LMG1210_CORE_U7         LMG1210_CORE_HI_ON LMG1210_CORE_N16622408
+  falling_delay PARAMS:  DELAY=1n VDD=1 VSS=0 VTHRESH=0.5
R_LMG1210_CORE_R10         LMG1210_CORE_N16622840 LMG1210_VSS  0.02  
X_LMG1210_CORE_U15         LMG1210_CORE_UVLOLOW LMG1210_CORE_N16704239
+  BUFFER_PS PARAMS: VHI=1 VLO=0 VTHRESH=500E-3 TPLH={Tlplh2} TPHL={Tlphl2}
+  TR=1E-9 TF=1E-9
C_LMG1210_CORE_C1         LMG1210_CORE_N16623024 LMG1210_CORE_N16623050  5p  
E_LMG1210_CORE_E7         LMG1210_CORE_N16628650 LMG1210_VSS HB
+  LMG1210_N16721723 1
E_LMG1210_CORE_E5         LMG1210_CORE_LO_ON LMG1210_VSS LMG1210_CORE_N16682205
+  LMG1210_VSS 1
V_LMG1210_CORE_V8         LMG1210_CORE_N16631334 0 0.1
X_LMG1210_CORE_U2         LMG1210_CORE_N16621646 LMG1210_CORE_N16621650
+  LMG1210_CORE_UVLOHI AND2_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=.5
C_LMG1210_CORE_C3         LMG1210_CORE_HOH LMG1210_CORE_N16623024  5p  
R_LMG1210_CORE_R2         LMG1210_VSS LMG1210_N16721992  200k  
C_LMG1210_CORE_C8         LO LMG1210_CORE_N16622828  5p  
R_LMG1210_CORE_R4         HB LMG1210_CORE_N16623050  0.02  
V_LMG1210_CORE_V1         LMG1210_CORE_N16621734 LMG1210_VSS 1.8
E_LMG1210_CORE_E4         LMG1210_CORE_N16622620 LMG1210_CORE_LOH VALUE {
+  IF(V(LMG1210_CORE_LO_ON, 0) > 0.5, 5, -5) }
X_LMG1210_CORE_U14         VCC LMG1210_CORE_N16633096 LMG1210_CORE_N16633124
+  LMG1210_CORE_N16621650 COMPHYS_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=0.5
R_LMG1210_CORE_R7         LMG1210_CORE_N16622620 LMG1210_CORE_N16622670  50  
M_LMG1210_CORE_M4         LMG1210_CORE_N16622840 LMG1210_CORE_N16622828 LO LO
+  PMOS01           
E_LMG1210_CORE_E8         LMG1210_CORE_N16631366 LMG1210_VSS HB
+  LMG1210_N16721723 1
V_LMG1210_CORE_V2         LMG1210_CORE_N16621760 0 0.4
M_LMG1210_CORE_M2         LMG1210_CORE_N16622258 LMG1210_CORE_N16622224 HO HO
+  PMOS01           
R_LMG1210_CORE_R5         LMG1210_CORE_N16622210 LMG1210_CORE_N16622224  50  
M_LMG1210_CORE_M3         LMG1210_CORE_N16622702 LMG1210_CORE_N16622670
+  LMG1210_CORE_LOH LMG1210_CORE_LOH NMOS01           
V_LMG1210_CORE_V9         LMG1210_CORE_N16633096 LMG1210_VSS 4.25
R_LMG1210_CORE_R12         LMG1210_CORE_LOH LO  1m  
X_LMG1210_CORE_U10         LMG1210_N16761314 LMG1210_CORE_N16621734
+  LMG1210_CORE_N16621760 LMG1210_CORE_N16621524 COMPHYS_BASIC_GEN PARAMS: VDD=1
+  VSS=0 VTHRESH=0.5
R_LMG1210_R27         LS_DAP 0  1m TC=0,0 
X_LMG1210_U4         BST LMG1210_VDD_VLDO d_d1 PARAMS:
R_LMG1210_R20         HS_3 LMG1210_N16721723  1m TC=0,0 
R_LMG1210_R28         NC_2 0  1m TC=0,0 
R_LMG1210_R26         HS_DAP 0  1m TC=0,0 
R_LMG1210_R29         NC_1 0  1m TC=0,0 
R_LMG1210_R30         NC_0 0  1m TC=0,0 
R_LMG1210_R21         HS_2 LMG1210_N16721723  1m TC=0,0 
.IC         V(LMG1210_PWM_DT_N16758862 )=0
.IC         V(LMG1210_PWM_DT_N16769401 )=0
.PARAM  thplh=7n tlplh2=10n idt=6u tlphl=7n thphl=5n tlphl2=8.45n tlplh=5n


.ends LMG1210 
*$
.subckt DT_Block_LMG1210_PWM_DT_S1 1 2 3 4  
S_LMG1210_PWM_DT_S1         3 4 1 2 _LMG1210_PWM_DT_S1
RS_LMG1210_PWM_DT_S1         1 2 1G
.MODEL         _LMG1210_PWM_DT_S1 VSWITCH Roff=1e6 Ron=1.0 Voff=0.0V Von=1.0V
.ends DT_Block_LMG1210_PWM_DT_S1

.subckt DT_Block_LMG1210_PWM_DT_S4 1 2 3 4  
S_LMG1210_PWM_DT_S4         3 4 1 2 _LMG1210_PWM_DT_S4
RS_LMG1210_PWM_DT_S4         1 2 1G
.MODEL         _LMG1210_PWM_DT_S4 VSWITCH Roff=1e6 Ron=1.0 Voff=0.0V Von=1.0V
.ends DT_Block_LMG1210_PWM_DT_S4

.subckt DT_Block_LMG1210_PWM_DT_S3 1 2 3 4  
S_LMG1210_PWM_DT_S3         3 4 1 2 _LMG1210_PWM_DT_S3
RS_LMG1210_PWM_DT_S3         1 2 1G
.MODEL         _LMG1210_PWM_DT_S3 VSWITCH Roff=1e6 Ron=1.0 Voff=0.0V Von=1.0V
.ends DT_Block_LMG1210_PWM_DT_S3

.subckt DT_Block_LMG1210_PWM_DT_S2 1 2 3 4  
S_LMG1210_PWM_DT_S2         3 4 1 2 _LMG1210_PWM_DT_S2
RS_LMG1210_PWM_DT_S2         1 2 1G
.MODEL         _LMG1210_PWM_DT_S2 VSWITCH Roff=1e6 Ron=1.0 Voff=0.0V Von=1.0V
.ends DT_Block_LMG1210_PWM_DT_S2

.subckt LMG1210_LMG1210_S4 1 2 3 4  
S_LMG1210_S4         3 4 1 2 _LMG1210_S4
RS_LMG1210_S4         1 2 1G
.MODEL         _LMG1210_S4 VSWITCH Roff=1e9 Ron=0.25 Voff=0.0V Von=1.0V
.ends LMG1210_LMG1210_S4

.subckt Core_Cell_LMG1210_CORE_S7 1 2 3 4  
S_LMG1210_CORE_S7         3 4 1 2 _LMG1210_CORE_S7
RS_LMG1210_CORE_S7         1 2 1G
.MODEL         _LMG1210_CORE_S7 VSWITCH Roff=1e11 Ron=1 Voff=.4 Von=.6
.ends Core_Cell_LMG1210_CORE_S7

** Wrapper definitions for AA legacy support **
**** ALL DIGITAL GATES***********
******************************************************************************
******************************************************************************
*$
.SUBCKT COMP_BASIC_GEN INP INM Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5	
E_ABM Yint 0 VALUE {IF (V(INP) > 
+ V(INM), {VDD},{VSS})}
R1 Yint Y 1
C1 Y 0 1n
.ENDS COMP_BASIC_GEN
*$
.SUBCKT COMPHYS_BASIC_GEN INP INM HYS OUT PARAMS: VDD=1 VSS=0 VTHRESH=0.5	
EIN INP1 INM1 INP INM 1 
EHYS INP1 INP2 VALUE { IF( V(1) > {VTHRESH},-V(HYS),0) }
EOUT OUT 0 VALUE { IF( V(INP2)>V(INM1), {VDD} ,{VSS}) }
R1 OUT 1 1
C1 1 0 5.0n
RINP1 INP1 0 1K
.ENDS COMPHYS_BASIC_GEN
*$
.SUBCKT COMPHYS2_BASIC_GEN INP INM HYS OUT PARAMS: VDD=1 VSS=0 VTHRESH=0.5	
+ T=10
EIN INP1 INM1 INP INM 1 
EHYS INM2 INM1 VALUE { IF( V(1) > {VTHRESH},-V(HYS)/2,V(HYS)/2) }
EOUT OUT 0 VALUE { IF( V(INP1)>V(INM2), {VDD} ,{VSS}) }
R1 OUT 1 1
C1 1 0 {T*1e-9}
RINP1 INP1 0 10K
RINM2 INM2 0 10K
.ENDS COMPHYS2_BASIC_GEN
*$
.SUBCKT AND2_BASIC_GEN A B Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  &  
+ V(B) > {VTHRESH},{VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS AND2_BASIC_GEN
*$
.SUBCKT AND3_BASIC_GEN A B C Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  &  
+ V(B) > {VTHRESH} &
+ V(C) > {VTHRESH},{VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS AND3_BASIC_GEN
*$
.SUBCKT AND4_BASIC_GEN A B C D Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  &  
+ V(B) > {VTHRESH} &
+ V(C) > {VTHRESH} &
+ V(D) > {VTHRESH},{VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS AND4_BASIC_GEN
*$
.SUBCKT NAND2_BASIC_GEN A B Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  &  
+ V(B) > {VTHRESH},{VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS NAND2_BASIC_GEN
*$
.SUBCKT NAND3_BASIC_GEN A B C Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  &  
+ V(B) > {VTHRESH} &
+ V(C) > {VTHRESH},{VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS NAND3_BASIC_GEN
*$
.SUBCKT NAND4_BASIC_GEN A B C D Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  &  
+ V(B) > {VTHRESH} &
+ V(C) > {VTHRESH} &
+ V(D) > {VTHRESH},{VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS NAND4_BASIC_GEN
*$
.SUBCKT OR2_BASIC_GEN A B Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  |  
+ V(B) > {VTHRESH},{VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS OR2_BASIC_GEN
*$
.SUBCKT OR3_BASIC_GEN A B C Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  |  
+ V(B) > {VTHRESH} |
+ V(C) > {VTHRESH},{VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS OR3_BASIC_GEN
*$
.SUBCKT OR4_BASIC_GEN A B C D Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  |  
+ V(B) > {VTHRESH} |
+ V(C) > {VTHRESH} |
+ V(D) > {VTHRESH},{VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS OR4_BASIC_GEN
*$
.SUBCKT NOR2_BASIC_GEN A B Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  |  
+ V(B) > {VTHRESH},{VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS NOR2_BASIC_GEN
*$
.SUBCKT NOR3_BASIC_GEN A B C Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  |  
+ V(B) > {VTHRESH} |
+ V(C) > {VTHRESH},{VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS NOR3_BASIC_GEN
*$
.SUBCKT NOR4_BASIC_GEN A B C D Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  |  
+ V(B) > {VTHRESH} |
+ V(C) > {VTHRESH} |
+ V(D) > {VTHRESH},{VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS NOR4_BASIC_GEN
*$
.SUBCKT NOR5_BASIC_GEN A B C D E Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE YINT 0 VALUE {{IF(V(A) > {VTHRESH}  |  
+ V(B) > {VTHRESH} |
+ V(C) > {VTHRESH} |
+ V(D) > {VTHRESH} |
+ V(E) > {VTHRESH},{VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS NOR5_BASIC_GEN
*$
.SUBCKT NOR6_BASIC_GEN A B C D E F Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE YINT 0 VALUE {{IF(V(A) > {VTHRESH}  |  
+ V(B) > {VTHRESH} |
+ V(C) > {VTHRESH} |
+ V(D) > {VTHRESH} |
+ V(E) > {VTHRESH} |
+ V(F) > {VTHRESH},{VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS NOR6_BASIC_GEN
*$
.SUBCKT INV_BASIC_GEN A  Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH} , 
+ {VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS INV_BASIC_GEN
*$
.SUBCKT XOR2_BASIC_GEN A B Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE  YINT 0 VALUE {{IF(V(A) > {VTHRESH}  ^  
+ V(B) > {VTHRESH},{VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS XOR2_BASIC_GEN
*$
.SUBCKT XNOR2_BASIC_GEN A B Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE  YINT 0 VALUE {{IF(V(A) > {VTHRESH}  ^  
+ V(B) > {VTHRESH},{VSS},{VDD})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS XNOR2_BASIC_GEN
*$
.SUBCKT MUX2_BASIC_GEN A B S Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE  YINT 0 VALUE {{IF(V(S) > {VTHRESH},  
+ V(B),V(A))}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS MUX2_BASIC_GEN
*$
.SUBCKT INV_DELAY_BASIC_GEN A  Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 DELAY = 10n 
E_ABMGATE1    YINT1 0 VALUE {{IF(V(A) > {VTHRESH} , 
+ {VDD},{VSS})}}
RINT YINT1 YINT2 1
CINT YINT2 0 {DELAY*1.3}
E_ABMGATE2    YINT3 0 VALUE {{IF(V(YINT2) > {VTHRESH} , 
+ {VSS},{VDD})}}
RINT2 YINT3 Y 1
CINT2 Y 0 1n
.ENDS INV_DELAY_BASIC_GEN
*$
.SUBCKT BUF_DELAY_BASIC_GEN A  Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 DELAY = 10n 
E_ABMGATE1    YINT1 0 VALUE {{IF(V(A) > {VTHRESH} , 
+ {VDD},{VSS})}}
RINT YINT1 YINT2 1
CINT YINT2 0 {DELAY*1.3}
E_ABMGATE2    YINT3 0 VALUE {{IF(V(YINT2) > {VTHRESH} , 
+ {VDD},{VSS})}}
RINT2 YINT3 Y 1
CINT2 Y 0 1n
.ENDS BUF_DELAY_BASIC_GEN
*$
.SUBCKT BUF_BASIC_GEN A  Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH} , 
+ {VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 1n
.ENDS BUF_BASIC_GEN
**Set has higher priority in this latch
******************************************************
*$
**Reset has higher priority in this latch
.SUBCKT SRLATCHRHP_BASIC_GEN S R Q QB PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
GQ 0 Qint VALUE = {IF(V(R) > {VTHRESH},-5,IF(V(S)>{VTHRESH},5, 0))}
CQint Qint 0 1n
RQint Qint 0 1000MEG
D_D10 Qint MY5 D_D1
V1 MY5 0 {VDD}
D_D11 MYVSS Qint D_D1
V2 MYVSS 0 {VSS} 
EQ Qqq 0 Qint 0 1
X3 Qqq Qqqd1 BUF_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH}
RQq Qqqd1 Q 1
EQb Qbr 0 VALUE = {IF( V(Q) > {VTHRESH}, {VSS},{VDD})}
RQb Qbr QB 1 
Cdummy1 Q 0 1n 
Cdummy2 QB 0 1n
.IC V(Qint) {VSS}
.ENDS SRLATCHRHP_BASIC_GEN
*$
*******************************************************************
**Set has higher priority in this latch
.SUBCKT SRLATCHSHP_BASIC_GEN S R Q QB PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
GQ 0 Qint VALUE = {IF(V(S) > {VTHRESH},5,IF(V(R)>{VTHRESH},-5, 0))}
CQint Qint 0 1n
RQint Qint 0 1000MEG
D_D10 Qint MY5 D_D1
V1 MY5 0 {VDD}
D_D11 MYVSS Qint D_D1
V2 MYVSS 0 {VSS} 
EQ Qqq 0 Qint 0 1
X3 Qqq Qqqd1 BUF_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH}
RQq Qqqd1 Q 1
EQb Qbr 0 VALUE = {IF( V(Q) > {VTHRESH}, {VSS},{VDD})}
RQb Qbr QB 1 
Cdummy1 Q 0 1n 
Cdummy2 QB 0 1n 
.IC V(Qint) {VSS}
.ENDS SRLATCHSHP_BASIC_GEN
******************************************************
*$
**Reset has higher priority in this latch and active low set and reset - basically NAND based SR latch
.SUBCKT SBRBLATCHRHP_BASIC_GEN SB RB Q QB PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
GQ 0 Qint VALUE = {IF(V(RB) < {VTHRESH},-5,IF(V(SB) < {VTHRESH},5, 0))}
CQint Qint 0 1n
RQint Qint 0 1000MEG
D_D10 Qint MY5 D_D1
V1 MY5 0 {VDD}
D_D11 MYVSS Qint D_D1
V2 MYVSS 0 {VSS} 
EQ Qqq 0 Qint 0 1
X3 Qqq Qqqd1 BUF_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH}
RQq Qqqd1 Q 1
EQb Qbr 0 VALUE = {IF( V(Q) > {VTHRESH}, {VSS},{VDD})}
RQb Qbr QB 1 
.IC V(Qint) {VSS}
.ENDS SBRBLATCHRHP_BASIC_GEN
*$
**Reset has higher priority in this latch and active low set and reset - basically NAND based SR latch
.SUBCKT SBRBLATCHSHP_BASIC_GEN SB RB Q QB PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
GQ 0 Qint VALUE = {IF(V(SB) < {VTHRESH},5,IF(V(RB) < {VTHRESH},-5, 0))}
CQint Qint 0 1n
RQint Qint 0 1000MEG
D_D10 Qint MY5 D_D1
V1 MY5 0 {VDD}
D_D11 MYVSS Qint D_D1
V2 MYVSS 0 {VSS} 
EQ Qqq 0 Qint 0 1
X3 Qqq Qqqd1 BUF_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH}
RQq Qqqd1 Q 1
EQb Qbr 0 VALUE = {IF( V(Q) > {VTHRESH}, {VSS},{VDD})}
RQb Qbr QB 1 
.IC V(Qint) {VSS}
.ENDS SBRBLATCHSHP_BASIC_GEN
*$
.SUBCKT DFFSBRB_SHPBASIC_GEN Q QB CLK D RB SB PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
***Set has higher priority in this
** Changed the delay from 7n/10n to 15n/20n to help larger time step simulations
**Faster flip-flops require a a smaller time step to simulate
X1 CLK CLKdel INV_DELAY_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH} DELAY = 15n
X2 CLK CLKdel CLKint AND2_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH}
GQ 0 Qint VALUE = {IF(V(SB) < {VTHRESH},5,IF(V(RB)<{VTHRESH},-5, IF(V(CLKint)> {VTHRESH}, 
+ IF(V(D)> {VTHRESH},5,-5),0)))}
CQint Qint 0 1n
RQint Qint 0 1000MEG
D_D10 Qint MY5 D_D1
V1 MY5 0 {VDD}
D_D11 MYVSS Qint D_D1
V2 MYVSS 0 {VSS} 
EQ Qqq 0 Qint 0 1
X3 Qqq Qqqd1 BUF_DELAY_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH} DELAY = 20n
RQq Qqqd1 Q 1
EQb Qbr 0 VALUE = {IF( V(Q) > {VTHRESH}, {VSS},{VDD})}
RQb Qbr Qb 1 
Cdummy1 Q 0 1nF 
Cdummy2 QB 0 1nF 
.IC V(Qint) {VSS}
.ENDS DFFSBRB_SHPBASIC_GEN
*$
.SUBCKT DFFSR_SHPBASIC_GEN Q QB CLK D R S PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
***Set has higher priority in this
** Changed the delay from 7n/10n to 15n/20n to help larger time step simulations
**Faster flip-flops require a a smaller time step to simulate
X1 CLK CLKdel INV_DELAY_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH} DELAY = 15n
X2 CLK CLKdel CLKint AND2_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH} 
GQ 0 Qint VALUE = {IF(V(S) > {VTHRESH},5,IF(V(R) > {VTHRESH},-5, IF(V(CLKint)> {VTHRESH}, 
+ IF(V(D)> {VTHRESH},5,-5),0)))}
CQint Qint 0 1n
RQint Qint 0 1000MEG
D_D10 Qint MY5 D_D1
V1 MY5 0 {VDD}
D_D11 MYVSS Qint D_D1
V2 MYVSS 0 {VSS} 
EQ Qqq 0 Qint 0 1
X3 Qqq Qqqd1 BUF_DELAY_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=0.5 DELAY = 20n
RQq Qqqd1 Q 1
EQb Qbr 0 VALUE = {IF( V(Q) > {VTHRESH}, {VSS},{VDD})}
RQb Qbr Qb 1 
Cdummy1 Q 0 1nF 
Cdummy2 QB 0 1nF 
.IC V(Qint) {VSS}
.ENDS DFFSR_SHPBASIC_GEN
*$
.SUBCKT DFFSBRB_RHPBASIC_GEN Q QB CLK D RB SB PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
***Set has higher priority in this
** Changed the delay from 7n/10n to 15n/20n to help larger time step simulations
**Faster flip-flops require a a smaller time step to simulate
X1 CLK CLKdel INV_DELAY_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH} DELAY = 15n
X2 CLK CLKdel CLKint AND2_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH} 
GQ 0 Qint VALUE = {IF(V(RB) < {VTHRESH},-5,IF(V(SB)< {VTHRESH},5, IF(V(CLKint)> {VTHRESH}, 
+ IF(V(D)> {VTHRESH},5,-5),0)))}
CQint Qint 0 1n
RQint Qint 0 1000MEG
D_D10 Qint MY5 D_D1
V1 MY5 0 5
D_D11 0 Qint D_D1 
EQ Qqq 0 Qint 0 1
X3 Qqq Qqqd1 BUF_DELAY_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH} DELAY = 20n
RQq Qqqd1 Q 1
EQb Qbr 0 VALUE = {IF( V(Q) > {VTHRESH}, {VSS},{VDD})}
RQb Qbr Qb 1 
Cdummy1 Q 0 1nF 
Cdummy2 QB 0 1nF 
.IC V(Qint) {VSS}
.ENDS DFFSBRB_RHPBASIC_GEN
*$
.SUBCKT DFFSR_RHPBASIC_GEN Q QB CLK D R S PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
***Set has higher priority in this
** Changed the delay from 7n/10n to 15n/20n to help larger time step simulations
**Faster flip-flops require a a smaller time step to simulate
X1 CLK CLKdel INV_DELAY_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH} DELAY = 15n
X2 CLK CLKdel CLKint AND2_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH}  
GQ 0 Qint VALUE = {IF(V(R) > {VTHRESH},-5,IF(V(S) > {VTHRESH},5, IF(V(CLKint)> {VTHRESH}, 
+ IF(V(D)> {VTHRESH},5,-5),0)))}
CQint Qint 0 1n
RQint Qint 0 1000MEG
D_D10 Qint MY5 D_D1
V1 MY5 0 {VDD}
D_D11 MYVSS Qint D_D1
V2 MYVSS 0 {VSS} 
EQ Qqq 0 Qint 0 1
X3 Qqq Qqqd1 BUF_DELAY_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH={VTHRESH} DELAY = 20n
RQq Qqqd1 Q 1
EQb Qbr 0 VALUE = {IF( V(Q) > {VTHRESH}, {VSS},{VDD})}
RQb Qbr Qb 1 
Cdummy1 Q 0 1nF 
Cdummy2 QB 0 1nF 
.IC V(Qint) {VSS}
.ENDS DFFSR_RHPBASIC_GEN
*$
**** SPM_Mono_POS  ***************************************************************************************
* FUNCTION: SHORT TIME PULSE GENERATOR AT NEG INPUT EDGE
* INPUTS/OUTPUTS: ONE DIGITAL INPUT: A, TWO DIG OUTPUT PINS: Q Qn
* DESCRIPTION: CREATE A PW PULSE WIDTH AT -VE EDGE OF INPUT, PULSE WIDTH OF INPUT NEEDS TO BE GREATER THAN PW PARAMETER VALUE
**********************
.SUBCKT MONOPOS_PS in Q Qn PARAMS: PW=1u 
****buffer*********
*RA in 0 1e11
*CA in 0 0.01pF
*VS VSUP 0 DC 1
**** boolean ************
*EBUF1 Y1 0 VALUE={IF(V(in) > .5 , 1, 0)}
*ROUTpp1 Y1 0 1e11
**** add delay lines ****
*XNSW1 Y2 Y1  0 NSW_PS PARAMS: RONval={(PW+1e-15)/(1e-12*0.693)} VTHval=0.5
*XPSW1 Y2 Y1 VSUP PSW_PS PARAMS: RONval={(PW+1e-15)/(1e-12*0.693)} VTHval=0.5
*CDEL1 Y2 0 1pF
*ETHRESH Y3 0 VALUE={IF(V(Y2) > 0.5, 0, 1)}
*ROUTp Y3 0 1e11
* ************add rise and fall *****
**XNSW2 Y4 Y3 0 NSW_PS PARAMS: RONval=(1e-12/1e-12*2.3) VTHval=0.5
**XPSW2 Y4 Y3 VSUP PSW_PS PARAMS: RONval=(1e-12/1e-12*2.3) VTHval=0.5
**CDEL2 Y4 0 1pF
************XOR2***********
*EXOR2 P 0 VALUE={IF(V(in) > 0.5 ^ V(Y3) > .5, 1, 0)}
*ROUTpp2 P 0 1e11
**********AND************
*EAND2 Y5 0 VALUE={IF(V(in) > 0.5 & V(P) > 0.5 , 0, 1)}
*ROUTpp3 Y5 0 1e11
* add rise and fall *****
*XNSW3 Q Y5 0 NSW_PS PARAMS: RONval=(1e-9/1e-12*2.3) VTHval=0.5
*XPSW3 Q Y5 VSUP PSW_PS PARAMS: RONval=(1e-9/1e-12*2.3) VTHval=0.5
*ROUTq Q 0 1e11
***********end of AND2********************
* add rise and fall + inversion *****
*XNSW4 Qn Q 0 NSW_PS PARAMS: RONval=(1e-9/1e-12*2.3) VTHval=0.5
*XPSW4 Qn Q VSUP PSW_PS PARAMS: RONval=(1e-9/1e-12*2.3) VTHval=0.5
*ROUTqn Qn 0 1e11
*******************************new take on delay*************
VS VSUP 0 DC 1
GIN VSUP YA VALUE={IF(V(IN)>0.5, V(VSUP)/1000K, 0)}
GDIS YA 0 VALUE={IF(V(IN)>0.5,0, V(YA)/1m)}
CIN YA 0 1n IC=0
RIN YA 0 1e11
EABM1 YTD 0 VALUE={IF(V(YA)> {PW*1000}, 1, 0)}
RYTD YTD 0 1e11
EXOR P 0 VALUE={IF(V(YTD) > 0.5 ^ V(IN) > .5, 1, 0)}
ROUTpp2 P 0 1e11
EAND1 Q1 0 VALUE={ IF(V(P)>0.5 & V(IN)>0.5, 1, 0)}
Ro1 Q1 Q 1m
Co1 Q 0 1p
ROUT2 Q 0 1e11
EAND2 Qn1 0 VALUE={ IF(V(Q)>0.5, 0, 1)}
Ro2 Qn1 Qn 1m
Co2 Qn 0 1p
ROUT4 Qn 0 1e11
.ENDS MONOPOS_PS
*$
.SUBCKT LDCR 1 2 PARAMS: L=1u DCR=20m
L1 1 INT1 {L}
R1 INT1 2 {DCR}
.ENDS LDCR
*$
.SUBCKT CESR 1 2 PARAMS: C=10u ESR=2m ESL=1n
C1 1 INT1 {C}
R1 INT1 INT2 {ESR}
L1 INT2 2 {ESL}
.ENDS CESR
*$
.SUBCKT multiplier V1 V2  OUT    
E_MULT    OUT 0 VALUE = { V(V1) *V(V2) }
.ENDS multiplier
*$
.SUBCKT 2to1MUX V1 V2  A  out    PARAMS:  VTHRESH=0.5 
E_MUX    OUT 0 VALUE = {IF (  V(A) > {VTHRESH} ,V(V1),V(V2) ) }
.ENDS 2to1MUX
*$
.SUBCKT VI_HL Vin VDD Vout 
E_out  Vout 0 VALUE = {if ( V(Vin) > V(VDD)*0.7, V(VDD),
+ if ( V(Vin) < V(VDD)*0.3, 0 , V(VDD)/2 ))} 
.ends  
*$
.SUBCKT COMPHYS_BASIC_GEN_NORC INP INM HYS OUT PARAMS: VDD=1 VSS=0 VTHRESH=0.5	
EIN INP1 INM1 INP INM 1 
EHYS INP1 INP2 VALUE { IF( V(1) > {VTHRESH},-V(HYS),0) }
EOUT OUT 0 VALUE { IF( V(INP2)>V(INM1), {VDD} ,{VSS}) }
R1 OUT 1 1
C1 1 0 1n
*RINP1 INP1 0 1K
RINP1 INP1 0 1000K
.ENDS COMPHYS_BASIC_GEN_NORC
*$
.SUBCKT COMP_HYS IN_POS IN_NEG HYS OUT 
X_U1         IN_POS N00153 OUT COMP_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=0.5
E_ABM2         N00234 0 VALUE { V(IN_NEG)+  
+ +(-V(OUT)*V(HYS))   }
R_R1         N00234 N00153  1  
C_C1         0 N00153  1n  
.ENDS COMP_HYS
* PSpice Model Editor - Version 16.2.0
*************************************************************
*************************************************************
*************************************************************
* PSpice Model Editor - Version 16.2.0
*$
.SUBCKT VARI_R  CNTL 1 2 
+PARAMS:   PTEMP=29
*Normalized to an equationwith VDDMAX=5.5V
*EVDD  VDDN 0 VALUE={V(CNTL)*0.0009-0.00495}
*Echeck ABSTEMP 0 VALUE={1+0.5*({PTEMP}-27)}
*E_tempco TEMPCO 0 VALUE={V(CNTL)*V(ABSTEMP)}
*G_out  1 2 VALUE = { (V(1,2) /  (V(TEMPCO))   ) }
G_out  1 2 VALUE = {V(1,2)/V(CNTL)}
.ends  VARI_R
*$
.SUBCKT D_D1 1 2
D1 1 2 DD1
.MODEL DD1 D( IS=1e-15 TT=10p Rs=0.05 N=.1  )
.ENDS D_D1
*$
.subckt d_d 1 2
d1 1 2 dd
.model dd d
+ is=1e-015
+ n=0.01
+ tt=1e-011
.ends d_d
*$
.model NMOS01 NMOS
+ VTO     = 2
*+ KP      = 0.1638
+ KP      = 0.3276
+ LAMBDA  = 0.001
*$
.model PMOS01 PMOS
+ VTO     = -2
*+ KP      = 0.389
+ KP      = 0.6875
+ LAMBDA  = 0.001
*$
.SUBCKT INVERTER IN OUT  
EOUT OUT1 0 VALUE { IF( V(IN)<0.5,1,0) }
R1 OUT1 OUT 1
C1 OUT 0 10p
.ends INVERTER
*$
.SUBCKT BUFFER_PS A Y PARAMS: vhi=1 vlo=0 vthresh=500e-3 tplh=1e-9 tphl=1e-9 tr=1e-9 tf=1e-9
RA A 0 1e11
CA A 0 0.01pF
VS VSUP 0 DC 1
EBUF1 Ypp 0 VALUE={IF(V(A) > ({vthresh}), 1, 0)}
ROUTpp Ypp 0 1e11
XNSW1 OUTp Ypp 0 NSW_PS PARAMS: RONval={(tplh+1e-15)/(1e-12*0.693)} VTHval=0.5
XPSW1 OUTp Ypp VSUP PSW_PS PARAMS: RONval={(tphl+1e-15)/(1e-12*0.693)} VTHval=0.5
CDEL1 OUTp 0 1pF
ETHRESH Yp 0 VALUE={IF(V(OUTp) > 0.5, 1, 0)}
ROUTp Yp 0 1e11
XNSW2 OUTr Yp 0 NSW_PS PARAMS: RONval={(tf+1e-15)/(1e-12*2.3)} VTHval=0.5
XPSW2 OUTr Yp VSUP PSW_PS PARAMS: RONval={(tr+1e-15)/(1e-12*2.3)} VTHval=0.5
CDEL2 OUTr 0 1pF
EOUT OUTf 0 VALUE={V(OUTr)*({vhi} - {vlo})+{vlo}}
RDR OUTf Y  1000
RO Y 0 1e11
.ENDS BUFFER_PS
*$
.SUBCKT NSW_PS D G S PARAMS: RONval=10k VTHval=0.7 VCHARval=0.01 CGval=0.01pF CDval=0.01pF CSval=0.01pf
RDDUM D 0 1e11
RSDUM S 0 1e11
RGDUM G 0 1e11
CG G D {CGval}
CD D S {CDval}
CS G S {CSval}
***EEXP F1 0 VALUE={LIMIT(((V(G,S)-VTHval)/VCHARval),-80,80)} 
Etest test 0 VALUE={IF(V(D) > V(S), V(G,S), V(G,D))}
GOUT D S VALUE={V(D,S)/(RONval*(1+EXP(-LIMIT(((V(test)-VTHval)/VCHARval),-80,80))))}
.ENDS NSW_PS
*$
.SUBCKT PSW_PS D G S PARAMS: RONval=10k VTHval=0.7 VCHARval=0.01 CGval=0.01pF CDval=0.01pF 
RDDUM D 0 1e11
RSDUM S 0 1e11
RGDUM G 0 1e11
CG G D {CGval}
CD D S {CDval}
Etest test 0 VALUE={IF(V(S) > V(D), V(S,G), V(D,G))}
GOUT S D VALUE={V(S,D)/(RONval*(1+EXP(-LIMIT(((V(test)-VTHval)/VCHARval),-80,80))))}
.ENDS PSW_PS
*$
.SUBCKT FALLING_DELAY IN OUT PARAMS: DELAY=100n VDD=1 VSS=0 VTHRESH=0.5
X_U1         INT OUT BUF_BASIC_GEN PARAMS: VDD={VDD} VSS={VSS} VTHRESH=
+ {VTHRESH}
R_R1         IN INT  {DELAY/(0.693 * 1E-9)}  
C_C1         0 INT  1n  
D_D1         IN INT DD 
.MODEL DD D( IS=1F N=0.01 TT = 10p )
.ENDS FALLING_DELAY
*$
.subckt LDO_Generic  IN EN OUT GND FB
R_LDO_R6         LDO_N242982 LDO_VYY  10 TC=0,0 
C_LDO_U1_C2         0 LDO_U1_N05382  1n  
V_LDO_U1_V4         LDO_U1_N12783 0 {UVLO}
X_LDO_U1_U1         EN LDO_U1_N11911 LDO_U1_N11626
+  LDO_U1_N11113 COMPHYS_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=0.5
E_LDO_U1_ABM4         LDO_U1_N09035 0 VALUE {
+  V(LDO_U1_N05348)  
+ * (ABS(V(OUT)) + 1e-6)  
+ / (ABS(V(FB)) + 1e-6)  }
C_LDO_U1_C1         0 LDO_U1_N05348  {1e-6*SQRT(TTRN)}  
R_LDO_U1_R1         GND LDO_U1_N05348  1G  
X_LDO_U1_U2         IN LDO_U1_N12783 LDO_U1_N12664
+  LDO_U1_N13377 COMPHYS_BASIC_GEN PARAMS: VDD=1 VSS=0 VTHRESH=0.5
V_LDO_U1_V2         LDO_U1_N11911 0 {VENB}
V_LDO_U1_V3         LDO_U1_N12664 0 {UHYS}
V_LDO_U1_V1         LDO_U1_N11626 0 {EHYS}
R_LDO_U1_R5         LDO_U1_N09745 LDO_N222524  10 TC=0,0 
R_LDO_U1_R3         LDO_U1_N08164 LDO_U1_N05348  
+ {3.333e5*SQRT(TTRN)} TC=0,0 
C_LDO_U1_C3         0 LDO_N222524  1n  
R_LDO_U1_R2         GND LDO_U1_N05382  1G  
E_LDO_U1_ABM6         LDO_U1_N08164 0 VALUE {
+  IF(V(LDO_U1_N13377)> 0.6 & V(LDO_U1_N11113) > 0.6, {VREF}, 0)    }
E_LDO_U1_ABM5         LDO_U1_N09745 0 VALUE {
+  MIN(V(LDO_U1_N05382),  
+ MAX(V(IN) - {DROP}, 0))   }
R_LDO_U1_R4         LDO_U1_N09035 LDO_U1_N05382  10 TC=0,0 
C_LDO_C3         0 LDO_VYY  1n  
R_LDO_R5         LDO_VZZ LDO_VYY  {ROUT}  
E_LDO_ABM1         LDO_N242982 0 VALUE { MIN(V(LDO_VXX),
+  (V(LDO_VZZ)+(ILIM*ROUT)))    }
R_LDO_R1         LDO_VXX IN  {RINP}  
X_LDO_F1    LDO_VZZ OUT IN LDO_VYY LDO_LDO_F1 
R_LDO_R2         LDO_N222524 LDO_VXX  {PSRR*RINP}  
C_LDO_C1         LDO_VXX IN  {1/(6.28*RINP*POLE)}  
C_LDO_C2         LDO_VXX LDO_N222524  
+ {1/(6.28*PSRR*RINP*ZERO)}  
.PARAM  psrr=5.623e-4 uvlo=0.1 venb=0.4 ilim=0.150 vout=5 pole=300 zero=1e4
+  rinp=1e7 ttrn=1e-4 rout=0.5 vref=1 ehys=0.1 drop=0.5 uhys=0.1
.ends LDO_Generic 
*$
.subckt LDO_LDO_F1 1 2 3 4  
F_LDO_F1         3 4 VF_LDO_F1 1
VF_LDO_F1         1 2 0V
.ends LDO_LDO_F1
*$
.SUBCKT AND2_BASIC_nodelay A B Y PARAMS: VDD=1 VSS=0 VTHRESH=0.5 
E_ABMGATE    YINT 0 VALUE {{IF(V(A) > {VTHRESH}  &  
+ V(B) > {VTHRESH},{VDD},{VSS})}}
RINT YINT Y 1
CINT Y 0 100p
.ENDS AND2_BASIC_nodelay 
*$
